#!/usr/bin/env sh

# This is a robust, POSIX-compliant Gradle wrapper script
# designed for maximum reliability in CI/CD environments like GitHub Actions.

# Exit immediately if a command exits with a non-zero status.
set -e

# Determine the absolute path of the directory containing this script.
# This is the most reliable method to locate the gradle-wrapper.jar.
APP_DIR_PATH=$(dirname "$0")
APP_HOME=$(cd "$APP_DIR_PATH" && pwd)

# The setup-java action ensures JAVA_HOME is set.
JAVA_CMD="$JAVA_HOME/bin/java"

# Define the path to the Gradle wrapper JAR.
WRAPPER_JAR="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"

# Verify that the wrapper JAR file actually exists before trying to execute it.
if [ ! -f "$WRAPPER_JAR" ]; then
    echo "FATAL: Gradle wrapper JAR is not found at: $WRAPPER_JAR"
    exit 1
fi

# Execute the Gradle wrapper.
# - Dorg.gradle.appname: Sets the process name for easier identification.
# - cp: Sets the Java classpath to our wrapper JAR.
# - org.gradle.wrapper.GradleWrapperMain: The main class to run.
# - "$@": Passes all script arguments (e.g., "assembleDebug") to Gradle.
exec "$JAVA_CMD" \
    -Dorg.gradle.appname=$(basename "$0") \
    -cp "$WRAPPER_JAR" \
    org.gradle.wrapper.GradleWrapperMain "$@"
