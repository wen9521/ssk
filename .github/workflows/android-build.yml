name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  frontend-build:
    name: 构建前端
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 缓存 npm 依赖
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}

      - name: 安装并构建前端
        run: |
          cd frontend
          npm ci
          npm run build

  android-build:
    name: 构建 Debug APK
    needs: frontend-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4

      - name: 设置 JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 缓存 Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle.properties') }}

      - name: 同步前端产物到 Android
        run: |
          rm -rf android/app/src/main/assets/*
          cp -r frontend/build/* android/app/src/main/assets/

      - name: 确保 Gradle Wrapper
        run: |
          if [ ! -f android/gradle/wrapper/gradle-wrapper.jar ]; then
            sudo apt-get update
            sudo apt-get install -y gradle
            cd android
            gradle wrapper
          fi

      - name: 授权并打包 Debug APK
        run: |
          chmod +x android/gradlew
          cd android
          ./gradlew clean assembleDebug

      - name: 上传 Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

  android-release:
    name: 构建 Release APK
    needs: android-build
    runs-on: ubuntu-latest
    env:
      SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
      SIGNING_KEY_ALIAS:       ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD:    ${{ secrets.SIGNING_KEY_PASSWORD }}
    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4

      - name: 设置 JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 解密 Keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > android/keystore.jks

      - name: 确保 Gradle Wrapper
        run: |
          if [ ! -f android/gradle/wrapper/gradle-wrapper.jar ]; then
            sudo apt-get update
            sudo apt-get install -y gradle
            cd android
            gradle wrapper
          fi

      - name: 授权并打包 Release APK
        run: |
          chmod +x android/gradlew
          cd android
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=keystore.jks \
            -Pandroid.injected.signing.store.password="$SIGNING_KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$SIGNING_KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$SIGNING_KEY_PASSWORD"

      - name: 上传 Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
