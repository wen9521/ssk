name: Android Build and Release

on:
  push:
    branches: [ "main" ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # 构建前端并拷贝到 Android assets
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Copy Frontend Build to Android Assets
      run: |
        rm -rf android/app/src/main/assets/*
        mkdir -p android/app/src/main/assets
        cp -r frontend/build/* android/app/src/main/assets/

    # Android 打包
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle and Generate Wrapper
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.7
        arguments: wrapper --gradle-version 8.7
        build-root-directory: android

    - name: Decode Keystore
      run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-key.jks

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: :app:assembleRelease --stacktrace
        build-root-directory: android
      env:
        SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

    - name: Upload Release APK to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk

    - name: Create GitHub Release and Upload APK
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      with:
        tag_name: v${{ github.run_number }}
        name: "Android Release v${{ github.run_number }}"
        body: |
          自动构建发布于 ${{ github.run_id }}
        draft: false
        prerelease: false
        files: |
          android/app/build/outputs/apk/release/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
