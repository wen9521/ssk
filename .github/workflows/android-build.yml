name: Android CI Build & Release

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm install
        npm run build

    - name: Copy frontend build to Android assets
      run: |
        mkdir -p android/app/src/main/assets/www
        rsync -av --delete frontend/build/ android/app/src/main/assets/www/

    - name: Calculate Version
      id: version
      run: |
        VERSION_CODE=$(git rev-list --count HEAD)
        VERSION_NAME="1.0.${VERSION_CODE}"
        echo "VERSION_CODE=${VERSION_CODE}" >> $GITHUB_ENV
        echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
        echo "TAG_NAME=v${VERSION_NAME}" >> $GITHUB_ENV
        echo "Calculated Version Name: ${VERSION_NAME}"

    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew

    - name: Build Debug APK
      working-directory: ./android
      run: ./gradlew assembleDebug -PversionCode=${{ env.VERSION_CODE }} -PversionName=${{ env.VERSION_NAME }}

    - name: Build and Sign Release APK
      id: build_release
      working-directory: ./android
      env:
        SIGNING_KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      run: |
        if [ -z "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" ]; then
          echo "Signing secrets not provided. Skipping release build."
          echo "release_built=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "Signing secrets found. Proceeding with release build."
        echo "Decoding keystore..."
        echo "$SIGNING_KEYSTORE_BASE64" | base64 --decode > app/release-key.jks
        
        echo "Building release APK..."
        ./gradlew assembleRelease -PversionCode=${{ env.VERSION_CODE }} -PversionName=${{ env.VERSION_NAME }}
        
        echo "release_built=true" >> $GITHUB_OUTPUT

    - name: Create and Publish GitHub Release
      if: steps.build_release.outputs.release_built == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.VERSION_NAME }}
        body: |
          New release based on commit: ${{ github.sha }}
          **Files:**
          - `app-release.apk`: Signed release build.
          - `app-debug.apk`: Unsigned debug build.
        draft: false
        prerelease: false
        files: |
          android/app/build/outputs/apk/release/app-release.apk
          android/app/build/outputs/apk/debug/app-debug.apk
