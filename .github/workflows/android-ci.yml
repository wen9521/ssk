name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    name: 构建前端
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 缓存依赖
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: 安装并打包
        run: |
          cd frontend
          npm ci
          npm run build

      - name: 修补 index.html 路径
        run: |
          sed -i -E '
            s|<base href="[^"]*"|<base href="file:///android_asset/www/"|;
            s|src="\./|src="|g;
            s|href="\./|href="|g
          ' frontend/build/index.html

      - name: 上传前端产物
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  android-debug:
    name: 构建 Debug APK
    needs: frontend-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 准备 assets 目录
        run: mkdir -p android/app/src/main/assets/www

      - name: 下载前端产物
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: android/app/src/main/assets/

      - name: 移动到 assets/www
        run: |
          rm -rf android/app/src/main/assets/www
          mkdir -p android/app/src/main/assets/www
          mv android/app/src/main/assets/index.html android/app/src/main/assets/www/
          mv android/app/src/main/assets/static     android/app/src/main/assets/www/

      - name: 列出拷贝后的文件
        run: ls -R android/app/src/main/assets/www

      - name: 设置 Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: 缓存 Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-debug-${{ runner.os }}-${{ hashFiles('android/**/*.gradle*','android/gradle-wrapper.properties') }}

      - name: 构建 Debug APK
        run: |
          cd android
          ./gradlew clean assembleDebug --no-daemon

      - name: 验证 APK 是否包含前端资源
        run: unzip -l android/app/build/outputs/apk/debug/app-debug.apk | grep "assets/www/"

      - name: 上传 Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/*.apk
