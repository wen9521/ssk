name: Android CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-build:
    name: Build Frontend Assets
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    outputs:
      build-hash: ${{ steps.hash-output.outputs.build-hash }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Verify Frontend Lockfile
        run: |
          if [ ! -f "frontend/package-lock.json" ]; then
            echo "::error::package-lock.json not found in frontend directory!"
            exit 1
          fi
          echo "Lockfile exists at frontend/package-lock.json"

      - name: Install Frontend Dependencies
        run: npm ci --prefix frontend --prefer-offline

      - name: Build Frontend Assets
        run: |
          cd frontend
          PUBLIC_URL='https://appassets.androidplatform.net/www' \
          REACT_APP_BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          npm run build
        env:
          GENERATE_SOURCEMAP: false

      - name: Generate Build Hash
        id: hash-output
        run: |
          BUILD_HASH=$(find frontend/build -type f -exec sha256sum {} + | sort | sha256sum | cut -d' ' -f1)
          echo "build-hash=$BUILD_HASH" >> $GITHUB_OUTPUT

      - name: Upload Frontend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-assets
          path: frontend/build/
          retention-days: 1

  android-build:
    name: Build Android APK
    needs: frontend-build
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Frontend Assets
        uses: actions/download-artifact@v4
        with:
          name: frontend-assets
          path: android/app/src/main/assets/www

      - name: Verify Assets Directory
        run: |
          if [ ! -d "android/app/src/main/assets/www" ]; then
            echo "::error::Frontend assets not found!"
            exit 1
          fi
          echo "Found $(find android/app/src/main/assets/www -type f | wc -l) frontend files"

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          cache-dependency-path: |
            android/**/*.gradle
            android/**/*.gradle.kts
            android/gradle/wrapper/gradle-wrapper.properties

      - name: Restore and Validate Keystore
        run: |
          mkdir -p android/app
          
          # 修复变量引用错误，并添加换行符处理
          echo "${{ secrets.KEYSTORE_BASE64 }}" > keystore.b64
          # 添加换行符确保正确解码（某些base64实现需要换行符）
          sed -i -e 's/\\n/\n/g' keystore.b64
          base64 -d keystore.b64 > android/app/release.keystore
          
          # 验证密钥库是否存在
          if [ ! -f "android/app/release.keystore" ]; then
            echo "::error::Keystore file not created!"
            exit 1
          fi
          
          # 验证密钥库有效性
          echo "Verifying keystore..."
          if ! keytool -list -v -keystore android/app/release.keystore -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -alias "${{ secrets.KEY_ALIAS }}"; then
            echo "::error::Keystore verification failed. Invalid keystore, password or alias."
            exit 1
          fi
          
          # 清理临时文件
          rm keystore.b64

      - name: Build Release APK
        run: |
          cd android
          ./gradlew clean assembleRelease \
            -Pandroid.injected.signing.store.file=$PWD/app/release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
            --no-daemon \
            --stacktrace
        env:
          ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Verify APK
        run: |
          apk_path="android/app/build/outputs/apk/release/app-release.apk"
          if [ ! -f "$apk_path" ]; then
            echo "::error::APK file not found at $apk_path"
            exit 1
          fi
          echo "APK size: $(du -h $apk_path | cut -f1)"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 1

  release:
    name: Create GitHub Release
    needs: [frontend-build, android-build]
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: .

      - name: Get Current Date
        id: get-date
        run: echo "date=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            ### Android App Release
            **Build Number**: ${{ github.run_number }}  
            **Build Date**: ${{ steps.get-date.outputs.date }}  
            **Frontend Hash**: ${{ needs.frontend-build.outputs.build-hash }}
          draft: false
          prerelease: false
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
