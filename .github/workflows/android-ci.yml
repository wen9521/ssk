name: Android CI + Emulator Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    name: 构建前端
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
      - run: |
          cd frontend
          npm ci
          npm run build
      - run: |
          sed -i -E '
            s|<base href="[^"]*"|<base href="file:///android_asset/www/"|;
            s|src="\./|src="|g;
            s|href="\./|href="|g
          ' frontend/build/index.html
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  android-debug:
    name: 构建 Debug APK
    needs: frontend-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p android/app/src/main/assets/www
      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: android/app/src/main/assets/
      - run: |
          rm -rf android/app/src/main/assets/www
          mv android/app/src/main/assets/index.html android/app/src/main/assets/www/
          mv android/app/src/main/assets/static android/app/src/main/assets/www/
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-debug-${{ runner.os }}-${{ hashFiles('android/**/*.gradle*','android/gradle-wrapper.properties') }}
      - run: |
          cd android
          ./gradlew clean assembleDebug --no-daemon
      - uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/*.apk

  validate-assets:
    name: 校验 APK 资源
    needs: android-debug
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: ./apk
      - run: sudo apt-get update && sudo apt-get install -y unzip
      - run: |
          unzip -l apk/*.apk | grep "assets/www/index.html" || exit 1
          unzip -l apk/*.apk | grep "assets/www/static/js" || exit 1

  emulator-test:
    name: 模拟器抓 Logcat
    needs: android-debug
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
    steps:
      - uses: actions/checkout@v4

      - name: 下载 Debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: ./app-debug

      - name: 安装 Android SDK Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip libgl1-mesa-dev libpulse0
          mkdir -p $ANDROID_SDK_ROOT
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip \
            -o cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT
          mv $ANDROID_SDK_ROOT/cmdline-tools $ANDROID_SDK_ROOT/tools
          yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" "emulator" "platforms;android-31" \
            "system-images;android-31;google_apis_playstore;x86_64"

      - name: 创建并启动 AVD
        run: |
          echo no | $ANDROID_SDK_ROOT/tools/bin/avdmanager create avd \
            --name ci --package "system-images;android-31;google_apis_playstore;x86_64" --force
          nohup $ANDROID_SDK_ROOT/emulator/emulator \
            -avd ci -no-window -no-audio -accel off \
            -gpu swiftshader_indirect &

      - name: 等待 Emulator 完全启动
        run: |
          adb kill-server && adb start-server
          for i in {1..60}; do
            adb shell getprop sys.boot_completed 2>/dev/null | grep -m1 "1" && break
            echo "Waiting for emulator boot ($i/60)" && sleep 5
          done
          adb devices

      - name: 安装 APK 并抓取 logcat
        run: |
          adb install -r app-debug/*.apk
          sleep 10
          adb logcat -d \
            | grep -E "MainActivity|原始 HTML|修补后 HTML" \
            > emulator-logcat.txt

      - uses: actions/upload-artifact@v4
        with:
          name: emulator-logcat
          path: emulator-logcat.txt
