name: Android CI + Emulator Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    name: 构建前端
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 缓存 node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: 安装并打包前端
        run: |
          cd frontend
          npm ci
          npm run build

      - name: 修补 index.html：修改 base href 并去除 "./" 前缀
        run: |
          sed -i -E '
            s|<base href="[^"]*"|<base href="file:///android_asset/www/"|;
            s|src="\./|src="|g;
            s|href="\./|href="|g
          ' frontend/build/index.html

      - name: 上传前端产物
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  android-debug:
    name: 构建 Debug APK
    needs: frontend-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4

      - name: 准备 assets/www 目录
        run: mkdir -p android/app/src/main/assets/www

      - name: 下载前端产物
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: android/app/src/main/assets/

      - name: 移动前端文件到 www
        run: |
          rm -rf android/app/src/main/assets/www
          mkdir -p android/app/src/main/assets/www
          mv android/app/src/main/assets/index.html android/app/src/main/assets/www/
          mv android/app/src/main/assets/static android/app/src/main/assets/www/

      - name: 设置 Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: 缓存 Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-debug-${{ runner.os }}-${{ hashFiles('android/**/*.gradle*','android/gradle-wrapper.properties') }}

      - name: Assemble Debug APK
        run: |
          cd android
          ./gradlew clean assembleDebug --no-daemon

      - name: 上传 Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/*.apk

  validate-assets:
    name: 校验 APK 中的前端资源
    needs: android-debug
    runs-on: ubuntu-latest
    steps:
      - name: 下载 Debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: ./apk

      - name: 安装 unzip
        run: sudo apt-get update -y && sudo apt-get install -y unzip

      - name: 列出 assets 目录结构
        run: |
          unzip -l apk/*.apk | grep "assets/www/index.html" || (echo "❌ 找不到 index.html" && exit 1)
          unzip -l apk/*.apk | grep "assets/www/static/js" || (echo "❌ 找不到 static/js" && exit 1)
          echo "✅ APK 中的前端资源校验通过"

  emulator-test:
    name: 模拟器抓取 Logcat
    needs: android-debug
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4

      - name: 下载 Debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: ./app-debug

      - name: 安装 Android SDK Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip libgl1-mesa-dev libpulse0
          mkdir -p $ANDROID_SDK_ROOT
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -o tools.zip
          unzip tools.zip -d $ANDROID_SDK_ROOT
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" "emulator" "platforms;android-31" "system-images;android-31;google_apis_playstore;x86_64"

      - name: 创建 & 启动 AVD
        run: |
          echo no | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd --name ci \
            --package "system-images;android-31;google_apis_playstore;x86_64" --force
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd ci -no-window -no-audio -accel off \
            -gpu swiftshader_indirect &

      - name: 等待 Emulator 启动
        run: |
          adb kill-server && adb start-server
          for i in {1..60}; do
            if adb shell getprop sys.boot_completed 2>/dev/null | grep -q 1; then
              echo "Emulator 已启动"
              break
            fi
            echo "等待模拟器启动 ($i/60)"
            sleep 5
          done
          adb devices

      - name: 安装 APK 并抓取日志
        run: |
          adb install -r app-debug/*.apk
          sleep 10
          adb logcat -d | grep -E "MainActivity|原始 HTML|修补后 HTML" > emulator-logcat.txt

      - name: 上传 Emulator 日志
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logcat
          path: emulator-logcat.txt
