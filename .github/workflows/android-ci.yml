name: Android CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-build:
    name: Build Frontend Assets
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    outputs:
      build-hash: ${{ steps.hash-output.outputs.build-hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install & build frontend
        run: |
          npm ci --prefix frontend --prefer-offline
          cd frontend
          PUBLIC_URL='https://appassets.androidplatform.net/www' \
            REACT_APP_BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            npm run build

      - name: Generate frontend hash
        id: hash-output
        run: |
          BUILD_HASH=$(
            find frontend/build -type f -exec sha256sum {} + |
            sort | sha256sum | cut -d' ' -f1
          )
          echo "build-hash=$BUILD_HASH" >> $GITHUB_OUTPUT

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-assets
          path: frontend/build/

  android-build:
    name: Build Android APKs
    runs-on: ubuntu-22.04
    needs: frontend-build
    timeout-minutes: 30
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate version info
        id: versioning
        run: |
          echo "versionCode=${{ github.run_number }}" >> $GITHUB_ENV
          echo "versionName=1.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Download frontend assets
        uses: actions/download-artifact@v4
        with:
          name: frontend-assets
          path: android/app/src/main/assets/www

      - name: Verify assets directory
        run: |
          if [ ! -d android/app/src/main/assets/www ]; then
            echo "::error::Frontend assets missing"
            exit 1
          fi
          echo "Found $(find android/app/src/main/assets/www -type f | wc -l) files"

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Restore keystore & validate
        run: |
          mkdir -p android/app
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d \
            > android/app/release.keystore
          keytool -list -v \
            -keystore android/app/release.keystore \
            -storepass "${{ secrets.SIGNING_KEYSTORE_PASSWORD }}" \
            -alias "${{ secrets.SIGNING_KEY_ALIAS }}"

      - name: Build Release APK
        run: |
          cd android
          ./gradlew clean assembleRelease \
            -PversionCode=${{ env.versionCode }} \
            -PversionName=${{ env.versionName }} \
            --no-daemon --stacktrace

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug \
            -PversionCode=${{ env.versionCode }} \
            -PversionName=${{ env.versionName }} \
            --no-daemon --stacktrace

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Create GitHub Release
    needs: android-build
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: android-release-apk
          path: .

      - name: Generate Release SHA256
        id: checksum
        run: |
          S=$(sha256sum app-release.apk | cut -d' ' -f1)
          echo "sha256=$S" >> $GITHUB_OUTPUT

      - name: Get Build Date
        id: get-date
        run: echo "date=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Prepare Release Notes
        run: |
          cat <<EOF > release_notes.md
          ### Android App v${{ env.versionName }}
          **Build Number**: ${{ github.run_number }}
          **Build Date**: ${{ steps.get-date.outputs.date }}
          **Frontend Hash**: ${{ needs.frontend-build.outputs.build-hash }}
          **Release SHA256**: \`${{ steps.checksum.outputs.sha256 }}\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.versionName }}
          name: Release v${{ env.versionName }}
          body_path: release_notes.md
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  beta:
    name: Create GitHub Prerelease
    needs: android-build
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Download Debug APK
        uses: actions/download-artifact@v4
        with:
          name: android-debug-apk
          path: .

      - name: Generate Debug SHA256
        id: checksum-beta
        run: |
          S=$(sha256sum app-debug.apk | cut -d' ' -f1)
          echo "sha256=$S" >> $GITHUB_OUTPUT

      - name: Get Build Date
        id: get-date-beta
        run: echo "date=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Prepare Prerelease Notes
        run: |
          cat <<EOF > beta_notes.md
          ### Android App v${{ env.versionName }}-beta
          **Build Number**: ${{ github.run_number }}
          **Build Date**: ${{ steps.get-date-beta.outputs.date }}
          **Frontend Hash**: ${{ needs.frontend-build.outputs.build-hash }}
          **Debug SHA256**: \`${{ steps.checksum-beta.outputs.sha256 }}\`
          EOF

      - name: Create GitHub Prerelease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.versionName }}-beta.${{ github.run_number }}
          name: Prerelease v${{ env.versionName }}-beta
          body_path: beta_notes.md
          files: app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
